/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { OpenAiApi } from "@fern-api/open-ai";
import * as core from "../../../../core";

export const CompletionChoice: core.serialization.ObjectSchema<
    serializers.CompletionChoice.Raw,
    OpenAiApi.CompletionChoice
> = core.serialization.object({
    text: core.serialization.string().optional(),
    index: core.serialization.number().optional(),
    logprobs: core.serialization.lazyObject(async () => (await import("../../..")).LogProbs).optional(),
    finishReason: core.serialization.property("finish_reason", core.serialization.string().optional()),
});

export declare namespace CompletionChoice {
    interface Raw {
        text?: string | null;
        index?: number | null;
        logprobs?: serializers.LogProbs.Raw | null;
        finish_reason?: string | null;
    }
}
