/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { OpenAI } from "@fern-api/openai";
import * as core from "../../../../core";

export const FineTune: core.serialization.ObjectSchema<serializers.FineTune.Raw, OpenAI.FineTune> =
    core.serialization.object({
        id: core.serialization.string(),
        object: core.serialization.string(),
        createdAt: core.serialization.property("created_at", core.serialization.number()),
        updatedAt: core.serialization.property("updated_at", core.serialization.number()),
        model: core.serialization.string(),
        fineTunedModel: core.serialization.property("fine_tuned_model", core.serialization.string().optional()),
        organizationId: core.serialization.property("organization_id", core.serialization.string()),
        status: core.serialization.string(),
        hyperparams: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        trainingFiles: core.serialization.property(
            "training_files",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).OpenAiFile))
        ),
        validationFiles: core.serialization.property(
            "validation_files",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).OpenAiFile))
        ),
        resultFiles: core.serialization.property(
            "result_files",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).OpenAiFile))
        ),
        events: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).FineTuneEvent))
            .optional(),
    });

export declare namespace FineTune {
    interface Raw {
        id: string;
        object: string;
        created_at: number;
        updated_at: number;
        model: string;
        fine_tuned_model?: string | null;
        organization_id: string;
        status: string;
        hyperparams: Record<string, unknown>;
        training_files: serializers.OpenAiFile.Raw[];
        validation_files: serializers.OpenAiFile.Raw[];
        result_files: serializers.OpenAiFile.Raw[];
        events?: serializers.FineTuneEvent.Raw[] | null;
    }
}
