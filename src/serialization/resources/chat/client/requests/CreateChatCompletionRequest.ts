/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { OpenAI } from "@fern-api/openai";
import * as core from "../../../../../core";

export const CreateChatCompletionRequest: core.serialization.Schema<
    serializers.CreateChatCompletionRequest.Raw,
    OpenAI.CreateChatCompletionRequest
> = core.serialization.object({
    model: core.serialization.string(),
    messages: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../..")).ChatCompletionRequestMessage)
    ),
    temperature: core.serialization.number().optional(),
    topP: core.serialization.property("top_p", core.serialization.number().optional()),
    n: core.serialization.number().optional(),
    stream: core.serialization.boolean().optional(),
    stop: core.serialization.lazy(async () => (await import("../../../..")).CompletionStop).optional(),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    presencePenalty: core.serialization.property("presence_penalty", core.serialization.number().optional()),
    frequencyPenalty: core.serialization.property("frequency_penalty", core.serialization.number().optional()),
    logitBias: core.serialization.property(
        "logit_bias",
        core.serialization.record(core.serialization.string(), core.serialization.number()).optional()
    ),
    user: core.serialization.string().optional(),
});

export declare namespace CreateChatCompletionRequest {
    interface Raw {
        model: string;
        messages: serializers.ChatCompletionRequestMessage.Raw[];
        temperature?: number | null;
        top_p?: number | null;
        n?: number | null;
        stream?: boolean | null;
        stop?: serializers.CompletionStop.Raw | null;
        max_tokens?: number | null;
        presence_penalty?: number | null;
        frequency_penalty?: number | null;
        logit_bias?: Record<string, number> | null;
        user?: string | null;
    }
}
